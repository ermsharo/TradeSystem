{"version":3,"sources":["logo.svg","pages/PaginaHome/Home.js","components/CandleStick/index.js","components/Header.js","components/Footer.js","components/MACD/index.js","pages/PaginaExibicaoIndicadores/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","styled","div","MACDFormatedData","MACD","console","log","x","y","size","length","i","push","Date","traceFormatedData","trace","ApexChart","props","state","series","name","type","data","candleData","traceSmall","stroke","color","fillColor","strokeColor","width","fill","style","traceLarge","MACDBar","options","chart","height","id","toolbar","autoSelected","show","zoom","enabled","plotOptions","candlestick","colors","upward","downward","line","xaxis","optionsMACD","seriesBar","traceMACD","optionsBar","brush","target","selection","opacity","dataLabels","bar","columnWidth","ranges","from","to","axisBorder","offsetX","yaxis","labels","this","class","React","Component","Logo","header","Header","Box","sx","flexGrow","AppBar","position","Toolbar","variant","IconButton","edge","aria-label","mr","src","Typography","component","FooterBox","footer","Footer","PageGrid","InfoGrid","IndicatorsBox","DatePicker","DatePickerMobile","LineTwo","LineThree","cardInside","value","description","Fragment","CardContent","fontSize","gutterBottom","mb","a11yProps","index","PaginaExibicaoIndicadores","EndDefault","setDate","getDate","useState","Indicator","startDateValue","setSartDateValue","endDateValue","setEndDateValue","setValue","response","setResponse","loading","setLoading","hasError","url","toISOString","split","useEffect","axios","get","then","TabPanel","children","other","role","hidden","aria-labelledby","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","label","onChange","newValue","renderInput","params","TextField","MobileDatePicker","Tabs","orientation","event","Tab","Card","avaliation","cumulative_return","toFixed","down_periods","n_transactions","up_periods","winning_trades_rate","trace_small","trace_large","trace_macd","close","date","high","low","open","FormatCandleData","CandleFormatData","candle_data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a613b718.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport LanguageOutlinedIcon from '@mui/icons-material/LanguageOutlined';\n\n\nconst HomeBox = styled.div`\n \n \n\n\n\n`;\n\n\nconst AboutBox = styled.div`\n \n \ndisplay: grid;\ngrid-template-columns: 1fr 1fr;\nwidth: 60vw;\nmargin: auto;\nmargin-top: 64px;\n\n`\n\nconst AboutText = styled.div`\n \n font-size: 24px;\n padding: 20px;\n margin-top: 24px;\n\n\n`\n\nconst AboutTitle = styled.div`\n \n font-size: 24px;\n padding: 35px;\n margin-top: 24px;\n\n\n`\n\n\n\nconst DataOptionsBox = styled.div`\n \n display: grid;\n grid-template-columns: 1fr 1fr;\n grid-column-gap: 5vw;\n width: 60vw;\n margin: auto;\n margin-top: 5vw;\n\n\n\n`;\n\n\n\n\n\nconst Cover = styled.div`\n  background-color :black; \n  background-position: center;\n  background-size: cover;\n  color: white; \n  min-height: calc(100vh - 60px) ;\n  position: relative;\n  top:60px;\n\n\n\n`;\n\n\n\n\n\n\n\nexport default function Home(){\n\n    return(\n\n\n<>\n\n\n<Cover> \n\n    <AboutTitle><Typography align = 'center' variant = \"h2\"> Trader System</Typography></AboutTitle>\n    <AboutText>\n        <Typography variant= \"h6\" style = {{width: '65vw', margin:'auto'}}>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam mauris eros, mattis vel blandit sed, feugiat porta arcu. Donec interdum, felis non mattis congue, mauris ante maximus justo, ac pretium arcu felis et quam. Maecenas mattis rhoncus elementum. Proin commodo nibh vitae ipsum ullamcorper posuere. Cras eget fermentum massa. Suspendisse purus velit, interdum ac aliquet in, porttitor id neque. Praesent non massa neque. Fusce convallis,  \n        </Typography>    \n            </AboutText>\n\n \n<DataOptionsBox>\n\n<Button variant=\"contained\" endIcon={<UploadFileIcon /> }  disableElevation>\n  Enviar sua fonte de dados \n</Button>\n<Button variant=\"contained\"    endIcon={<LanguageOutlinedIcon />}  disableElevation>\n    Usar fonte de dados de terceiro \n</Button>\n\n</DataOptionsBox>\n\n</Cover>\n\n\n\n\n</>\n\n\n    )\n\n\n}\n\n","\nimport Chart from 'react-apexcharts'\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport styled from \"styled-components\";\n\n\nconst MACDFormatedData = (MACD) =>{\n console.log('MACD', MACD);\n\n  let x = MACD.x; \n  let y = MACD.y; \n\n  //[Timestamp, O, H, L, C]\n\n   let size = x.length; \nconsole.log(\"Date\", x.length)\n\n  let MACDFormatedData = [];\n\n  for(let i = 0 ; i < size ; i++){\n\n    MACDFormatedData.push({x : new Date(x[i]) , y: y[x[i]] });\n  }\n  \nconsole.log('macd --->',MACDFormatedData);  \n/*  return(FormatCandleData);  */\n\nreturn MACDFormatedData; \n  \n }; \n\n\n const ChartsGrid = styled.div`\n display: grid; \n grid-template-columns: 1fr 1fr;\n \n \n `\n\n\n\nconst traceFormatedData = (trace) =>{\n\n\n    let x = trace.x; \n    let y = trace.y; \n\n    //[Timestamp, O, H, L, C]\n \n     let size = x.length; \n console.log(\"Date\", x.length)\n\n    let traceFormatedData = [];\n \n    for(let i = 0 ; i < size ; i++){\n \n      traceFormatedData.push({x : new Date(x[i]) , y:y[i]});\n    }\n    \n console.log(traceFormatedData);  \n/*  return(FormatCandleData);  */\n\nreturn traceFormatedData; \n    \n   }; \n\n\nexport default class ApexChart extends React.Component {\n  constructor(props) {\n    super(props);\n    \n\n    this.state = {\n        series: [{\n          name: 'candle',\n          type :'candlestick',\n          data: this.props.candleData,\n        },\n        {\n          name: this.props.traceSmall.name,\n          type: 'line',\n          data: traceFormatedData(this.props.traceSmall),\n          \n            stroke:{\n              color: 'red',\n              fillColor: 'red', \n              strokeColor: 'red', \n              width: '5px',\n            },\n            fill:{\n                   color: 'red',\n            },\n            style: {\n              color: 'red',\n            }\n         \n        },\n        \n        {\n          name: this.props.traceLarge.name,\n          type: 'line',\n          data: traceFormatedData(this.props.traceLarge),\n            color: 'blue',\n            stroke:{\n              color: 'red',\n              fillColor: 'red', \n              strokeColor: 'red', \n              width: '5px',\n            },\n            fill:{\n              color: 'red',\n            }\n        \n        },\n        \n        ],\n\n\n        MACDBar: [{\n          name: 'macd',\n           data: this.props.candleData\n        }],\n              options: {\n                chart: {\n                  type: 'candlestick',\n                  height: 290,\n                  id: 'candles',\n                  toolbar: {\n                    autoSelected: 'pan',\n                    show: true\n                  },\n                  zoom: {\n                    enabled: false\n                  },\n                },\n                plotOptions: {\n                  candlestick: {\n                    colors: {\n                      upward: '#3C90EB',\n                      downward: '#DF7D46'\n                    }\n                  },\n                  line:{\n                    color: 'red'\n                  }\n                },\n                xaxis: {\n                  type: 'datetime'\n                }\n              },\n            \n              optionsMACD: {\n                chart: {\n                  type: 'candlestick',\n                  height: 290,\n                  id: 'candles',\n                  toolbar: {\n                    autoSelected: 'pan',\n                    show: true\n                  },\n                  zoom: {\n                    enabled: false\n                  },\n                },\n                plotOptions: {\n                  candlestick: {\n                    colors: {\n                      upward: '#3C90EB',\n                      downward: '#DF7D46'\n                    }\n                  },\n                  line:{\n                    color: 'red'\n                  }\n                },\n                xaxis: {\n                  type: 'datetime'\n                }\n              },\n            \n\n\n              seriesBar: [{\n                name: 'volume',\n              data:   MACDFormatedData(this.props.traceMACD),\n              }],\n              optionsBar: {\n                chart: {\n                  height: '100%',\n                  type: 'bar',\n                  brush: {\n                    enabled: true,\n                    target: 'candles'\n                  },\n                  selection: {\n                    enabled: true,\n                    xaxis: {\n                    \n                    },\n                    fill: {\n                      color: '#ccc',\n                      opacity: 0.4\n                    },\n                    stroke: {\n                      color: '#0D47A1',\n                    }\n                  },\n                },\n                dataLabels: {\n                  enabled: false\n                },\n                plotOptions: {\n                  bar: {\n                    columnWidth: '80%',\n                    colors: {\n                      ranges: [{\n                        from: -1000,\n                        to: 0,\n                        color: '#F15B46'\n                      }, {\n                        from: 1,\n                        to: 10000,\n                        color: '#FEB019'\n                      }],\n                \n                    },\n                  }\n                },\n                stroke: {\n                  width: 0\n                },\n                xaxis: {\n                  type: 'datetime',\n                  axisBorder: {\n                    offsetX: 13\n                  }\n                },\n                yaxis: {\n                  labels: {\n                    show: false\n                  }\n                }\n              },\n            \n            \n            };\n          }\n        \n\n\n\n  render() {\n\n\n    let CandleFormatdata = {\n      data: this.props.candleData\n    }\n\n    \n    MACDFormatedData(this.props.traceMACD)\n  \n\n    let seriesMACD = {\n      data: MACDFormatedData(this.props.traceMACD)\n    }; \n\n    let OptionsMACD = {\n   /*    chart: {\n        type: 'bar',\n        height: 430\n      }, */\n     /*  plotOptions: {\n        bar: {\n          horizontal: true,\n          dataLabels: {\n            position: 'top',\n          },\n        }\n      }, */\n   /*    dataLabels: {\n        enabled: true,\n        offsetX: -6,\n        style: {\n          fontSize: '12px',\n          colors: ['#fff']\n        }\n      }, */\n      stroke: {\n        show: true,\n        width: 1,\n        colors: ['#fff']\n      },\n      tooltip: {\n        shared: true,\n        intersect: false\n      },\n/*       xaxis: {\n        categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n      }, */\n    };\n\n\n\n    return (\n      \n\n<div class=\"chart-box\">\n<div id=\"chart-candlestick\">\n<Chart options={this.state.options} series={this.state.series} type=\"candlestick\" height={350} />\n\n</div>\n\n\n<div id=\"chart-bar\">\n  \n<Chart options={this.state.optionsBar} series={this.state.seriesBar} type=\"bar\" height={160} />\n</div>\n</div>\n\n\n\n\n\n      );\n    }\n  }\n\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nconst HeaderBox = styled.header`\n \n \n background-color: black;\n color:white; \n display: flex;\n justify-content: center;\n\n\n`\n\n\nconst Logo = styled.div`\n\nimg{\n    margin-top: 10px;\n    margin-bottom: 10px;\n   width: 30px;\n   height: 30px;\n}\n`; \n\n\n\nexport default function Header()\n{\n\n    return(\n\n        <Box sx={{ flexGrow: 2 }}>\n        <AppBar position=\"fixed\" color =\"default\">\n          <Toolbar variant=\"dense\">\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\n              <MenuIcon />\n            </IconButton>\n            <Logo><img src = \"https://upload.wikimedia.org/wikipedia/commons/a/ab/Logo_TV_2015.png\" />\n            </Logo>\n            <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\n              \n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Box>\n\n    )\n\n\n}\n\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n\nconst FooterBox = styled.footer`\n \n background-color: black;\n color:white; \n padding: 40px;\n margin-top: 64px;\n \n\n\n`;\n\n\n\nexport default function Footer()\n{\n\n    return(\n\n        <FooterBox> \n              <div>Trade system</div>\n              <span>2021</span>  \n        </FooterBox>\n\n    )\n\n\n}\n\n","\nimport Chart from 'react-apexcharts'\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport styled from \"styled-components\";\n\n\nconst MACDFormatedData = (MACD) =>{\n console.log('MACD', MACD);\n\n  let x = MACD.x; \n  let y = MACD.y; \n\n  //[Timestamp, O, H, L, C]\n\n   let size = x.length; \nconsole.log(\"Date\", x.length)\n\n  let MACDFormatedData = [];\n\n  for(let i = 0 ; i < size ; i++){\n\n    MACDFormatedData.push({x : new Date(x[i]) , y: y[x[i]] });\n  }\n  \nconsole.log('macd --->',MACDFormatedData);  \n/*  return(FormatCandleData);  */\n\nreturn MACDFormatedData; \n  \n }; \n\n\n\n\nconst traceFormatedData = (trace) =>{\n\n\n    let x = trace.x; \n    let y = trace.y; \n\n    //[Timestamp, O, H, L, C]\n \n     let size = x.length; \n console.log(\"Date\", x.length)\n\n    let traceFormatedData = [];\n \n    for(let i = 0 ; i < size ; i++){\n \n      traceFormatedData.push({x : new Date(x[i]) , y:y[i]});\n    }\n    \n console.log(traceFormatedData);  \n/*  return(FormatCandleData);  */\n\nreturn traceFormatedData; \n    \n   }; \n\n\nexport default class ApexChart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        \n          series: [{\n            data:   MACDFormatedData(this.props.traceMACD),\n          }],\n          options: {\n            chart: {\n              type: 'bar',\n              height: 290,\n              id: 'bar',\n              toolbar: {\n                autoSelected: 'pan',\n                show: false\n              },\n              zoom: {\n                enabled: false\n              },\n              toolbar: {\n                autoSelected: 'pan',\n                show: true\n              },\n            },\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: '#3C90EB',\n                  downward: '#DF7D46'\n                }\n              }\n            },\n            xaxis: {\n              type: 'datetime'\n            }\n          },\n        \n          seriesBar: [{\n            name: 'volume',\n            data:   MACDFormatedData(this.props.traceMACD)\n          }],\n          optionsBar: {\n            chart: {\n              height: 160,\n              type: 'bar',\n              brush: {\n                enabled: true,\n                target: 'candles'\n              },\n              selection: {\n                enabled: true,\n                xaxis: {\n                  min: new Date('20 Jan 2017').getTime(),\n                  max: new Date('10 Dec 2017').getTime()\n                },\n                fill: {\n                  color: '#ccc',\n                  opacity: 0.4\n                },\n                stroke: {\n                  color: '#0D47A1',\n                }\n              },\n            },\n            dataLabels: {\n              enabled: false\n            },\n            plotOptions: {\n              bar: {\n                columnWidth: '80%',\n                colors: {\n                  ranges: [{\n                    from: -1000,\n                    to: 0,\n                    color: '#F15B46'\n                  }, {\n                    from: 1,\n                    to: 10000,\n                    color: '#FEB019'\n                  }],\n            \n                },\n              }\n            },\n            stroke: {\n              width: 0\n            },\n            xaxis: {\n              type: 'datetime',\n              axisBorder: {\n                offsetX: 13\n              }\n            },\n            yaxis: {\n              labels: {\n                show: false\n              }\n            }\n          },\n        \n        \n        };\n      }\n\n\n\n  render() {\n\n\n    let CandleFormatdata = {\n      data: this.props.candleData\n    }\n\n    \n    MACDFormatedData(this.props.traceMACD)\n  \n\n\n    return (\n      \n<div class=\"chart-box\">\n  <div id=\"chart\">\n  <Chart options={this.state.options} series={this.state.series} type=\"bar\" height={290} />\n</div>\n  <div id=\"chart-bar\">\n  <Chart options={this.state.optionsBar} series={this.state.seriesBar} type=\"bar\" height={160} />\n</div>\n</div>\n\n      );\n    }\n  }\n\n","import React from 'react';\n\n\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport styled from \"styled-components\";\n/* import { useFetch } from '../../../services/requests'; */\nimport { RepeatOneSharp } from '@mui/icons-material';\nimport {useState, useEffect} from 'react';\nimport CandleStick from './../../components/CandleStick/index';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Header from './../../components/Header';\nimport Footer from './../../components/Footer';\nimport axios from \"axios\";\nimport { height } from '@mui/system';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport Stack from '@mui/material/Stack';\nimport MACD from './../../components/MACD/index';\n\n\nconst PageGrid = styled.div`\npadding: 64px;\nmargin-top: 32px;\n\n\n`\n\n\nconst ChartGrid = styled.div`\n display: grid; \n grid-template-columns: 1fr 1fr;\n\n`\n\n\nconst InfoGrid = styled.div`\n\ndisplay: flex;\npadding: 32px;\njustify-content: space-between;\n\n`\n\n\n\n\nconst IndicatorsBox = styled.div`\n\ndisplay: grid;\n grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n column-gap: 32px;\nrow-gap: 32px;\npadding: 0px 32px; \npadding-bottom: 32px;\n`\n\n\nconst DatePicker = styled.div`\n\n\n\n\ndisplay:grid; \n  grid-template-columns: 1fr 1fr ;\n column-gap: 32px;\nrow-gap: 32px;\npadding: 0px 32px; \npadding-bottom: 32px;\n\n\n@media(max-width: 1200px){\n\n\ndisplay :none; \n}\n\n\n\n\n\n`\n\nconst DatePickerMobile = styled.div`\ndisplay:none; \n\n@media(max-width: 1200px){\n  \n\n  display: grid;\n grid-template-columns: 1fr 1fr ;\n column-gap: 32px;\nrow-gap: 32px;\npadding: 0px 32px; \npadding-bottom: 32px;\n}\n\n\n`\n\n\n\n\n\n\nconst LineTwo = styled.div`\ndisplay: grid;\ngrid-template-columns: 160px 1fr;\n\nrow-gap: 32px;\nmargin-top:32px; \n\n`\n\n\nconst LineThree = styled.div`\n\n\n`\n\nconst bull = (\n    <Box\n      component=\"span\"\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n    >\n      •\n    </Box>\n  );\n\n  \n  \n  function cardInside(name, value,description ){\n      return(\n\n    <React.Fragment>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n        {name}\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {value}  \n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n         {description}\n        </Typography>\n        \n      </CardContent>\n   \n    </React.Fragment>\n      )}\n\n\n      function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n      \n        return (\n          <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n          >\n            {value === index && (\n              <Box >\n                <Typography>{children}</Typography>\n              </Box>\n            )}\n          </div>\n        );\n      }\n      \n      TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.number.isRequired,\n        value: PropTypes.number.isRequired,\n      };\n      \n\n      function a11yProps(index) {\n        return {\n          id: `vertical-tab-${index}`,\n          'aria-controls': `vertical-tabpanel-${index}`,\n        };\n      }\n      \n\n\n\n\n\n\nconst PaginaExibicaoIndicadores = (props) => {\n\n\n  var EndDefault = new Date(); \n  var x = 360; \n  EndDefault.setDate(EndDefault.getDate() - x);\n\n  const [Indicator, setIndicator] = React.useState('macd');\n  const [startDateValue, setSartDateValue] = React.useState(EndDefault);\n  const [endDateValue, setEndDateValue] =   React.useState(new Date());\n\n    const [value, setValue] = React.useState(0);\n      \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n\n\n    const [response, setResponse] = useState(null)\n    const [loading, setLoading] = useState(true)\n    const [hasError, setHasError] = useState(false)\n\n\n\n\n\n    let FormatDate = () =>{\n      \n    }; \n\n\n\n    const url = `http://127.0.0.1:8000/${Indicator}/yahoo/MULT3.SA?start=${startDateValue.toISOString().split('T')[0]}&end=${endDateValue.toISOString().split('T')[0]}&small_avg=9&larg_avg=16`;\n \n\n\n\n   React.useEffect(() => {\n\n     axios.get(url).then((response) => {\n      setResponse(response.data);\n      console.log(response.data);\n      setLoading(false);\n      console.log(startDateValue.toISOString().split('T')[0]); \n     });\n   }, [startDateValue, endDateValue]);\n \n   if (!response) return null;\n\n\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`vertical-tabpanel-${index}`}\n        aria-labelledby={`vertical-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box >\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n\n  const CandleFormatData = (candleData) =>{\n\n   let close= candleData.close; \n   let date = candleData.date; \n   let high = candleData.high; \n   let low = candleData.low; \n   let open = candleData.open; \n\n   //[Timestamp, O, H, L, C]\n\n    let size = date.length; \nconsole.log(\"Date\", date.length)\n   let FormatCandleData = [];\n   for(let i = 0 ; i < size ; i++){\n\n    FormatCandleData.push({x : new Date(date[i]) , y:[ open[i], high[i], low[i], close[i]]});\n   }\n   \nconsole.log(FormatCandleData); \nreturn(FormatCandleData); \n   \n  }; \n\n\n\n \n\n\n\n\n\n\n  if(loading) return(<div>Loading...</div>)\n  if(hasError) return(<div>Error occured.</div> )\n  else if(response){\n\n\n \n  return (\n   \n    <>  <Header />\n     \n  <PageGrid>\n    <InfoGrid> \n      <div>\n  <Typography variant = \"h3\" > Nome da ação</Typography>\n  <Typography variant = \"h5\" > Vindo do yahoo</Typography>\n  </div>\n  <div>\n  <LocalizationProvider dateAdapter={AdapterDateFns}>\n    <DatePicker>\n    <DesktopDatePicker\n          label=\"Data do inicio\"\n          value={startDateValue}\n          onChange={(newValue) => {\n            setSartDateValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n\n<DesktopDatePicker\n          label=\"Data do fim\"\n          value={endDateValue}\n          onChange={(newValue) => {\n            setEndDateValue(newValue)\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n\n   </DatePicker>\n   <DatePickerMobile>\n       \n<MobileDatePicker\n          label=\"Data do inicio\"\n          value={startDateValue}\n          onChange={(newValue) => {\n            setSartDateValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n\n<MobileDatePicker\n          label=\"Data do fim\"\n          value={endDateValue}\n          onChange={(newValue) => {\n            setEndDateValue(newValue)\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n\n </DatePickerMobile>\n    </LocalizationProvider>\n  </div>\n  </InfoGrid>\n                <LineTwo>\n         \n        <div>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n  \n      >\n        <Tab label=\"MACD\" {...a11yProps(0)} />\n        <Tab label=\"Indicadior 2\" {...a11yProps(1)} />\n        <Tab label=\"Indicadior 3\" {...a11yProps(2)} />\n        <Tab label=\"Indicadior 4\" {...a11yProps(3)} />\n \n      </Tabs>\n      </div>\n      <div>\n      <TabPanel value={value} index={0}>\n\n      <IndicatorsBox>\n\n\n<Box >\n<Card variant=\"outlined\">{cardInside(\"cumulative_return\", response.avaliation.cumulative_return.toFixed(2)+\"%\", \"descrição\")}</Card>\n</Box>\n<Box >\n<Card variant=\"outlined\">{cardInside(\"down_periods\", response.avaliation.down_periods, \"descrição\")}</Card>\n</Box>\n<Box >\n<Card variant=\"outlined\">{cardInside(\"n_transactions\", response.avaliation.n_transactions, \"descrição\")}</Card>\n</Box>\n<Box >\n<Card variant=\"outlined\">{cardInside(\"up_periods\", response.avaliation.up_periods, \"descrição\")}</Card>\n</Box>\n<Box >\n<Card variant=\"outlined\">{cardInside(\"winning_trades_rate\", response.avaliation.winning_trades_rate.toFixed(2)+\"%\", \"descrição\")}</Card>\n</Box>\n</IndicatorsBox>\n{/* <ChartGrid> */}\n      <CandleStick  traceSmall = {response.trace_small} \n      traceLarge = {response.trace_large} \n       traceMACD = {response.trace_macd} \n       candleData = {CandleFormatData(response.candle_data)}/>\n     {/*     <MACD  traceSmall = {response.trace_small} \n      traceLarge = {response.trace_large} \n       traceMACD = {response.trace_macd} \n       candleData = {CandleFormatData(response.candle_data)}/>\n       </ChartGrid> */}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      \n      </TabPanel>\n      <TabPanel value={value} index={2}>\n  \n      </TabPanel>\n      <TabPanel value={value} index={3}>\n\n      </TabPanel>\n</div>\n\n                    \n                    \n           \n                    \n                    \n                   <div></div></LineTwo>\n                <LineThree><div></div></LineThree>\n\n            </PageGrid>\n\n            \n            <Footer/>\n </>\n)\n\n\n\n  }\n}\nexport default PaginaExibicaoIndicadores;\n","import logo from './logo.svg';\nimport './App.css';\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport React, { Component }  from 'react';\nimport Home from  './pages/PaginaHome/Home';\nimport PaginaExibicaoIndicadores from './pages/PaginaExibicaoIndicadores';\nimport PaginaFonteExterna from './pages/PaginaFonteExterna';\nimport PaginaFonteLocal from './pages/PaginaFonteLocal';\n\n\n\n\nfunction App() {\n//Enuqnato não tivermos  a rota, vamos usar essa constante aqui \n\n  //0 - home\n  //1 - Input de csv\n  //2 - Input de base externa\n  //3 - Exibição dos indicadores\n\n{/*  <Home/> \n <PaginaFonteLocal/> \n <PaginaFonteExterna/>  */}\nreturn(\n<div>\n <PaginaExibicaoIndicadores />\n  </div>\n)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n<App/>\n</BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}