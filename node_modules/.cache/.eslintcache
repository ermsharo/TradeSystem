[{"/home/emilio/Projetos/TraderClient/src/index.js":"1","/home/emilio/Projetos/TraderClient/src/reportWebVitals.js":"2","/home/emilio/Projetos/TraderClient/src/App.js":"3","/home/emilio/Projetos/TraderClient/src/components/Header.js":"4","/home/emilio/Projetos/TraderClient/src/components/Footer.js":"5","/home/emilio/Projetos/TraderClient/src/services/requests.js":"6","/home/emilio/Projetos/TraderClient/src/pages/PaginaFonteExterna/index.js":"7","/home/emilio/Projetos/TraderClient/src/pages/PaginaFonteLocal/index.js":"8","/home/emilio/Projetos/TraderClient/src/pages/PaginaExibicaoIndicadores/index.js":"9","/home/emilio/Projetos/TraderClient/src/pages/PaginaHome/Home.js":"10","/home/emilio/Projetos/TraderClient/src/components/CandleStick/index.js":"11"},{"size":581,"mtime":1637173668309,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1632946353599,"results":"14","hashOfConfig":"13"},{"size":629,"mtime":1637613126403,"results":"15","hashOfConfig":"13"},{"size":1199,"mtime":1637185510666,"results":"16","hashOfConfig":"13"},{"size":365,"mtime":1634603416331,"results":"17","hashOfConfig":"13"},{"size":582,"mtime":1633112442082,"results":"18","hashOfConfig":"13"},{"size":151,"mtime":1637177015593,"results":"19","hashOfConfig":"13"},{"size":139,"mtime":1637177074586,"results":"20","hashOfConfig":"13"},{"size":9272,"mtime":1637649574590,"results":"21","hashOfConfig":"13"},{"size":2112,"mtime":1637177058536,"results":"22","hashOfConfig":"13"},{"size":3833,"mtime":1637651545528,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"o5cbnz",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/emilio/Projetos/TraderClient/src/index.js",[],["53","54"],"/home/emilio/Projetos/TraderClient/src/reportWebVitals.js",[],"/home/emilio/Projetos/TraderClient/src/App.js",["55","56","57","58"],"import logo from './logo.svg';\nimport './App.css';\n\n\nimport Home from  './pages/PaginaHome/Home';\nimport PaginaExibicaoIndicadores from './pages/PaginaExibicaoIndicadores';\nimport PaginaFonteExterna from './pages/PaginaFonteExterna';\nimport PaginaFonteLocal from './pages/PaginaFonteLocal';\n\n\n\n\nfunction App() {\n//Enuqnato não tivermos  a rota, vamos usar essa constante aqui \n\n  //0 - home\n  //1 - Input de csv\n  //2 - Input de base externa\n  //3 - Exibição dos indicadores\n\nreturn(\n<>\n\n\n{/*  <Home/> \n <PaginaFonteLocal/> \n <PaginaFonteExterna/>  */}\n <PaginaExibicaoIndicadores />\n \n\n   \n  \n\n  </>\n)\n}\n\nexport default App;\n","/home/emilio/Projetos/TraderClient/src/components/Header.js",["59","60"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nconst HeaderBox = styled.header`\n \n \n background-color: black;\n color:white; \n display: flex;\n justify-content: center;\n\n\n`\n\n\nconst Logo = styled.div`\n\nimg{\n    margin-top: 10px;\n    margin-bottom: 10px;\n   width: 30px;\n   height: 30px;\n}\n`; \n\n\n\nexport default function Header()\n{\n\n    return(\n\n        <Box sx={{ flexGrow: 2 }}>\n        <AppBar position=\"fixed\" color =\"default\">\n          <Toolbar variant=\"dense\">\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\n              <MenuIcon />\n            </IconButton>\n            <Logo><img src = \"https://upload.wikimedia.org/wikipedia/commons/a/ab/Logo_TV_2015.png\" />\n            </Logo>\n            <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\n              \n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Box>\n\n    )\n\n\n}\n\n","/home/emilio/Projetos/TraderClient/src/components/Footer.js",[],"/home/emilio/Projetos/TraderClient/src/services/requests.js",["61"],"import {useState, useEffect} from 'react';\n\n\nexport function useFetch(url, opts) {\n    const [response, setResponse] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [hasError, setHasError] = useState(false)\n    useEffect(() => {\n        setLoading(true)\n        fetch(url, opts)\n            .then((res) => {\n            setResponse(res.data)\n            setLoading(false)\n        })\n            .catch(() => {\n                setHasError(true)\n                setLoading(false)\n            })\n    }, [ url ])\n    return [ response, loading, hasError ]\n}",["62","63"],"/home/emilio/Projetos/TraderClient/src/pages/PaginaFonteExterna/index.js",[],"/home/emilio/Projetos/TraderClient/src/pages/PaginaFonteLocal/index.js",[],"/home/emilio/Projetos/TraderClient/src/pages/PaginaExibicaoIndicadores/index.js",["64","65","66","67","68","69","70","71","72","73"],"import React from 'react';\n\n\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport styled from \"styled-components\";\n/* import { useFetch } from '../../../services/requests'; */\nimport { RepeatOneSharp } from '@mui/icons-material';\nimport {useState, useEffect} from 'react';\nimport CandleStick from './../../components/CandleStick/index';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Header from './../../components/Header';\nimport Footer from './../../components/Footer';\nimport axios from \"axios\";\nimport { height } from '@mui/system';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport Stack from '@mui/material/Stack';\n\n\nconst PageGrid = styled.div`\npadding: 64px;\nmargin-top: 32px;\n\n\n`\n\n\nconst InfoGrid = styled.div`\n\ndisplay: flex;\npadding: 32px;\njustify-content: space-between;\n\n`\n\n\n\n\nconst IndicatorsBox = styled.div`\n\ndisplay: grid;\n grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n column-gap: 32px;\nrow-gap: 32px;\npadding: 0px 32px; \npadding-bottom: 32px;\n`\n\n\nconst DatePicker = styled.div`\n\n\n\n\ndisplay:grid; \n  grid-template-columns: 1fr 1fr ;\n column-gap: 32px;\nrow-gap: 32px;\npadding: 0px 32px; \npadding-bottom: 32px;\n\n\n@media(max-width: 1200px){\n\n\ndisplay :none; \n}\n\n\n\n\n\n`\n\nconst DatePickerMobile = styled.div`\ndisplay:none; \n\n@media(max-width: 1200px){\n  \n\n  display: grid;\n grid-template-columns: 1fr 1fr ;\n column-gap: 32px;\nrow-gap: 32px;\npadding: 0px 32px; \npadding-bottom: 32px;\n}\n\n\n`\n\n\n\n\n\n\nconst LineTwo = styled.div`\ndisplay: grid;\ngrid-template-columns: 160px 1fr;\n\nrow-gap: 32px;\nmargin-top:32px; \n\n`\n\n\nconst LineThree = styled.div`\n\n\n`\n\nconst bull = (\n    <Box\n      component=\"span\"\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n    >\n      •\n    </Box>\n  );\n\n  \n  \n  function cardInside(name, value,description ){\n      return(\n\n    <React.Fragment>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n        {name}\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {value}  \n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n         {description}\n        </Typography>\n        \n      </CardContent>\n   \n    </React.Fragment>\n      )}\n\n\n      function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n      \n        return (\n          <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n          >\n            {value === index && (\n              <Box >\n                <Typography>{children}</Typography>\n              </Box>\n            )}\n          </div>\n        );\n      }\n      \n      TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.number.isRequired,\n        value: PropTypes.number.isRequired,\n      };\n      \n\n      function a11yProps(index) {\n        return {\n          id: `vertical-tab-${index}`,\n          'aria-controls': `vertical-tabpanel-${index}`,\n        };\n      }\n      \n\n\n\n\n\n\nconst PaginaExibicaoIndicadores = (props) => {\n\n  const [startDateValue, setSartDateValue] = React.useState(new Date());\n  const [endDateValue, setEndDateValue] = React.useState(new Date());\n\n    const [value, setValue] = React.useState(0);\n      \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n\n\n    const [response, setResponse] = useState(null)\n    const [loading, setLoading] = useState(true)\n    const [hasError, setHasError] = useState(false)\n\n\n\n\n   /* const [ response, loading, hasError ] = useFetch('https://trading-system-backend.herokuapp.com/macd/yahoo/MULT3.SA?start=2020-11-17&end=2021-11-17&small_avg=9&larg_avg=16'); \n */\n\n    const url = \"http://127.0.0.1:8000/macd/yahoo/MULT3.SA?start=2020-11-17&end=2021-11-17&small_avg=9&larg_avg=16\";\n \n   const [post, setPost] = React.useState(null);\n\n\n   React.useEffect(() => {\n\n     axios.get(url).then((response) => {\n      setResponse(response.data);\n      console.log(response.data);\n      setLoading(false);\n     });\n   }, []);\n \n   if (!response) return null;\n\n\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`vertical-tabpanel-${index}`}\n        aria-labelledby={`vertical-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box >\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n\n  const CandleFormatData = (candleData) =>{\n\n   let close= candleData.close; \n   let date = candleData.date; \n   let high = candleData.high; \n   let low = candleData.low; \n   let open = candleData.open; \n\n   //[Timestamp, O, H, L, C]\n\n    let size = date.length; \nconsole.log(\"Date\", date.length)\n   let FormatCandleData = [];\n   for(let i = 0 ; i < size ; i++){\n\n    FormatCandleData.push({x : new Date(date[i]) , y:[ open[i], high[i], low[i], close[i]]});\n   }\n   \nconsole.log(FormatCandleData); \nreturn(FormatCandleData); \n   \n  }; \n\n\n\n \n\n\n\n\n\n\n  if(loading) return(<div>Loading...</div>)\n  if(hasError) return(<div>Error occured.</div> )\n  else if(response){\n\n\n \n  return (\n   \n    <>  <Header />\n     \n  <PageGrid>\n    <InfoGrid> \n      <div>\n  <Typography variant = \"h3\" > Nome da ação</Typography>\n  <Typography variant = \"h5\" > Vindo do yahoo</Typography>\n  </div>\n  <div>\n  <LocalizationProvider dateAdapter={AdapterDateFns}>\n    <DatePicker>\n    <DesktopDatePicker\n          label=\"Data do inicio\"\n          value={startDateValue}\n          minDate={new Date('2017-01-01')}\n          onChange={(newValue) => {\n            setSartDateValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n\n<DesktopDatePicker\n          label=\"Data do fim\"\n          value={endDateValue}\n          minDate={new Date('2017-01-01')}\n          onChange={(newValue) => {\n            setEndDateValue(newValue)\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n\n   </DatePicker>\n   <DatePickerMobile>\n       \n<MobileDatePicker\n          label=\"Data do inicio\"\n          value={startDateValue}\n          onChange={(newValue) => {\n            setSartDateValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n\n<MobileDatePicker\n          label=\"Data do fim\"\n          value={endDateValue}\n          onChange={(newValue) => {\n            setEndDateValue(newValue)\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n\n </DatePickerMobile>\n    </LocalizationProvider>\n  </div>\n  </InfoGrid>\n                <LineTwo>\n         \n        <div>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n  \n      >\n        <Tab label=\"MACD\" {...a11yProps(0)} />\n        <Tab label=\"Indicadior 2\" {...a11yProps(1)} />\n        <Tab label=\"Indicadior 3\" {...a11yProps(2)} />\n        <Tab label=\"Indicadior 4\" {...a11yProps(3)} />\n \n      </Tabs>\n      </div>\n      <div>\n      <TabPanel value={value} index={0}>\n\n      <IndicatorsBox>\n\n\n<Box >\n<Card variant=\"outlined\">{cardInside(\"cumulative_return\", response.avaliation.cumulative_return.toFixed(2)+\"%\", \"descrição\")}</Card>\n</Box>\n<Box >\n<Card variant=\"outlined\">{cardInside(\"down_periods\", response.avaliation.down_periods, \"descrição\")}</Card>\n</Box>\n<Box >\n<Card variant=\"outlined\">{cardInside(\"n_transactions\", response.avaliation.n_transactions, \"descrição\")}</Card>\n</Box>\n<Box >\n<Card variant=\"outlined\">{cardInside(\"up_periods\", response.avaliation.up_periods, \"descrição\")}</Card>\n</Box>\n<Box >\n<Card variant=\"outlined\">{cardInside(\"winning_trades_rate\", response.avaliation.winning_trades_rate.toFixed(2)+\"%\", \"descrição\")}</Card>\n</Box>\n</IndicatorsBox>\n\n      <CandleStick  traceSmall = {response.trace_small} \n      traceLarge = {response.trace_large} \n       traceMACD = {response.trace_macd} \n       candleData = {CandleFormatData(response.candle_data)}/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <CandleStick/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <CandleStick/>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n      <CandleStick/>\n      </TabPanel>\n</div>\n\n                    \n                    \n           \n                    \n                    \n                   <div></div></LineTwo>\n                <LineThree><div></div></LineThree>\n\n            </PageGrid>\n\n            \n            <Footer/>\n </>\n)\n\n\n\n  }\n}\nexport default PaginaExibicaoIndicadores;\n","/home/emilio/Projetos/TraderClient/src/pages/PaginaHome/Home.js",["74","75"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport LanguageOutlinedIcon from '@mui/icons-material/LanguageOutlined';\n\n\nconst HomeBox = styled.div`\n \n \n\n\n\n`;\n\n\nconst AboutBox = styled.div`\n \n \ndisplay: grid;\ngrid-template-columns: 1fr 1fr;\nwidth: 60vw;\nmargin: auto;\nmargin-top: 64px;\n\n`\n\nconst AboutText = styled.div`\n \n font-size: 24px;\n padding: 20px;\n margin-top: 24px;\n\n\n`\n\nconst AboutTitle = styled.div`\n \n font-size: 24px;\n padding: 35px;\n margin-top: 24px;\n\n\n`\n\n\n\nconst DataOptionsBox = styled.div`\n \n display: grid;\n grid-template-columns: 1fr 1fr;\n grid-column-gap: 5vw;\n width: 60vw;\n margin: auto;\n margin-top: 5vw;\n\n\n\n`;\n\n\n\n\n\nconst Cover = styled.div`\n  background-color :black; \n  background-position: center;\n  background-size: cover;\n  color: white; \n  min-height: calc(100vh - 60px) ;\n  position: relative;\n  top:60px;\n\n\n\n`;\n\n\n\n\n\n\n\nexport default function Home(){\n\n    return(\n\n\n<>\n\n\n<Cover> \n\n    <AboutTitle><Typography align = 'center' variant = \"h2\"> Trader System</Typography></AboutTitle>\n    <AboutText>\n        <Typography variant= \"h6\" style = {{width: '65vw', margin:'auto'}}>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam mauris eros, mattis vel blandit sed, feugiat porta arcu. Donec interdum, felis non mattis congue, mauris ante maximus justo, ac pretium arcu felis et quam. Maecenas mattis rhoncus elementum. Proin commodo nibh vitae ipsum ullamcorper posuere. Cras eget fermentum massa. Suspendisse purus velit, interdum ac aliquet in, porttitor id neque. Praesent non massa neque. Fusce convallis,  \n        </Typography>    \n            </AboutText>\n\n \n<DataOptionsBox>\n\n<Button variant=\"contained\" endIcon={<UploadFileIcon /> }  disableElevation>\n  Enviar sua fonte de dados \n</Button>\n<Button variant=\"contained\"    endIcon={<LanguageOutlinedIcon />}  disableElevation>\n    Usar fonte de dados de terceiro \n</Button>\n\n</DataOptionsBox>\n\n</Cover>\n\n\n\n\n</>\n\n\n    )\n\n\n}\n\n","/home/emilio/Projetos/TraderClient/src/components/CandleStick/index.js",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":12},{"ruleId":"81","severity":1,"message":"86","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":26},{"ruleId":"81","severity":1,"message":"87","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":24},{"ruleId":"81","severity":1,"message":"88","line":10,"column":7,"nodeType":"83","messageId":"84","endLine":10,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":45,"column":19,"nodeType":"91","endLine":45,"endColumn":103},{"ruleId":"92","severity":1,"message":"93","line":19,"column":8,"nodeType":"94","endLine":19,"endColumn":15,"suggestions":"95"},{"ruleId":"77","replacedBy":"96"},{"ruleId":"79","replacedBy":"97"},{"ruleId":"81","severity":1,"message":"98","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":19},{"ruleId":"81","severity":1,"message":"99","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":14},{"ruleId":"81","severity":1,"message":"100","line":12,"column":10,"nodeType":"83","messageId":"84","endLine":12,"endColumn":24},{"ruleId":"81","severity":1,"message":"101","line":13,"column":19,"nodeType":"83","messageId":"84","endLine":13,"endColumn":28},{"ruleId":"81","severity":1,"message":"102","line":21,"column":10,"nodeType":"83","messageId":"84","endLine":21,"endColumn":16},{"ruleId":"81","severity":1,"message":"103","line":27,"column":8,"nodeType":"83","messageId":"84","endLine":27,"endColumn":13},{"ruleId":"81","severity":1,"message":"104","line":122,"column":7,"nodeType":"83","messageId":"84","endLine":122,"endColumn":11},{"ruleId":"81","severity":1,"message":"105","line":209,"column":22,"nodeType":"83","messageId":"84","endLine":209,"endColumn":33},{"ruleId":"81","severity":1,"message":"106","line":219,"column":11,"nodeType":"83","messageId":"84","endLine":219,"endColumn":15},{"ruleId":"81","severity":1,"message":"107","line":219,"column":17,"nodeType":"83","messageId":"84","endLine":219,"endColumn":24},{"ruleId":"81","severity":1,"message":"108","line":9,"column":7,"nodeType":"83","messageId":"84","endLine":9,"endColumn":14},{"ruleId":"81","severity":1,"message":"109","line":18,"column":7,"nodeType":"83","messageId":"84","endLine":18,"endColumn":15},{"ruleId":"81","severity":1,"message":"110","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":16},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'PaginaFonteExterna' is defined but never used.","'PaginaFonteLocal' is defined but never used.","'HeaderBox' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'opts'. Either include it or remove the dependency array.","ArrayExpression",["113"],["111"],["112"],"'CardActions' is defined but never used.","'Button' is defined but never used.","'RepeatOneSharp' is defined but never used.","'useEffect' is defined but never used.","'height' is defined but never used.","'Stack' is defined but never used.","'bull' is assigned a value but never used.","'setHasError' is assigned a value but never used.","'post' is assigned a value but never used.","'setPost' is assigned a value but never used.","'HomeBox' is assigned a value but never used.","'AboutBox' is assigned a value but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [opts, url]",{"range":"116","text":"117"},[529,536],"[opts, url]"]